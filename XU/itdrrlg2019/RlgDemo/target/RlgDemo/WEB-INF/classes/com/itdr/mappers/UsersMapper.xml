<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itdr.mappers.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.itdr.pojo.Users" >
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="question" property="question" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, email, phone, question, answer, role, create_time, update_time
  </sql>
  <!--登录用户详细信息-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from neuedu_user
    where id = #{id,jdbcType=INTEGER}
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from neuedu_user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" parameterType="com.itdr.pojo.Users" >
    insert into neuedu_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="question != null" >
        question,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="question != null" >
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

<!--登录更新个人信息-->
  <update id="updateByPrimaryKeySelective" parameterType="com.itdr.pojo.Users" >
    update neuedu_user
    <set >
      <if test="email != null" >
        email = #{email},
      </if>
      <if test="phone != null" >
        phone = #{phone},
      </if>
      <if test="question != null" >
        question = #{question},
      </if>
      <if test="answer != null" >
        answer = #{answer},
      </if>
        update_time = now()
    </set>
    where id = #{id}

  </update>


  <update id="updateByPrimaryKey" parameterType="com.itdr.pojo.Users" >
    update neuedu_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--用户登录-->
    <select id="selectByusernameAndpassword" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from neuedu_user
        where username = #{username} and password=#{password}
    </select>

    <!--用户注册-->
    <insert id="insert" parameterType="com.itdr.pojo.Users" >
    insert into neuedu_user (id, username, password,
      email, phone, question,
      answer, role, create_time,
      update_time)
    values (null , #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR},
      #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER},now(),
      now())
  </insert>
    <!--验证用户名邮箱是否存在-->
    <select id="selectByUserEmail" parameterType="map" resultType="java.lang.Integer">
      select
      count(id)
      from neuedu_user
      <where>
       <if test="type=='username'">
         username=#{str}
       </if>
        <if test="str=='email'">
          email==#{str}
        </if>
      </where>


      <!--查询邮箱-->
    </select>
  <select id="selectByEmain" parameterType="map" resultType="java.lang.Integer">
     select
      count(id)
      from neuedu_user
      where
       email==#{email} and id ! = #{id}
  </select>
<!--忘记密码-->
  <select id="selectByusername" parameterType="string" resultType="java.lang.String">
    select
    question
     from neuedu_user where username=#{username}
  </select>
  <!--提交问题答案-->
  <select id="selectByUserAndQuestionAndAnswer"  parameterType="map" resultType="java.lang.Integer">
    select
    count(id)
    from neuedu_user
    where username=#{username} and question=#{question} and answer=#{answer}
  </select>


  <!--根据用户名重设密码-->
  <update id="upByUsernamrAndpassword" parameterType="map">
    update neuedu_user
    set
    password=#{passwordNew},
    update_time=now()
    where username=#{username}
  </update>


  <!--登录中状态重置密码-->
  <select id="selectByIdAndpassword" parameterType="map" resultType="java.lang.Integer">
   select
   count(id)
   from neuedu_user
   where id=#{id} and password=#{passwordOld}
  </select>

  <!--获取登录用户权限 用户-->
    <select id="selectRole" parameterType="integer" resultType="java.lang.Integer">
   select
   count(id)
   from neuedu_user
   where id=#{Id} and role=1
    </select>
  <!--获取登录用户权限 管理员-->
  <select id="selectRoles" parameterType="integer" resultType="java.lang.Integer">
   select
   count(id)
   from neuedu_user
   where id=#{Id} and role=0
    </select>
</mapper>